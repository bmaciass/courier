name = "courier-api"
main = "./server.worker.ts"
compatibility_date = "2024-01-28"
node_compat = true

routes = [{ pattern = "api.sandbox.nopi.dev", custom_domain = true }]

# kv_namespaces = [
# { binding = "SANDBOX_WEBHOOK_KEYS", id = "c180920c8b96442eb5009cb52c01eea7" },
# ]

# [build]
# command = "pnpm --filter prisma run generate --no-engine"

[vars]
NODE_ENV = "local"
DATABASE_URL = "prisma://root:root@localhost:4000/?api_key=eyJhbGciOiJIUzI1NiJ9.eyJkYXRhc291cmNlVXJsIjoicG9zdGdyZXM6Ly9yb290OnJvb3RAbG9jYWxob3N0OjUwMDEvY291cmllcj9zY2hlbWE9cHVibGljIiwiaWF0IjoxNzA5ODczNDk3LCJpc3MiOiJwcmlzbWEtYWNjZWxlcmF0ZSJ9.NXkWCZ-EExcAvq_QeCaUVGc16WZ3L2hQxdVyN1Ogtv4"
NODE_TLS_REJECT_UNAUTHORIZED = "0"
NODE_NO_WARNINGS = "1"

[env.sandbox]
name = "sandbox-courier-api"
routes = [{ pattern = "api.sandbox.nopi.dev", custom_domain = true }]

[env.production]
name = "prod-courier-api"
routes = [{ pattern = "api.nopi.dev", custom_domain = true }]
# kv_namespaces = [
# { binding = "WEBHOOK_KEYS", id = "f47f75deefeb43febf706bb4ee85129f" },
# ]

[env.production.vars]
NODE_ENV = "production"
DATABASE_URL = "postgres://postgres.dghvdnmiekgrgzmgdyjf:SSVUA0Q9W8g551jZ@aws-0-us-east-1.pooler.supabase.com:6543/postgres"

# Variable bindings. These are arbitrary, plaintext strings (similar to environment variables)
# Note: Use secrets to store sensitive data.
# Docs: https://developers.cloudflare.com/workers/platform/environment-variables
# [vars]
# MY_VARIABLE = "production_value"

# Bind a KV Namespace. Use KV as persistent storage for small key-value pairs.
# Docs: https://developers.cloudflare.com/workers/runtime-apis/kv
# [[kv_namespaces]]
# binding = "MY_KV_NAMESPACE"
# id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# Bind an R2 Bucket. Use R2 to store arbitrarily large blobs of data, such as files.
# Docs: https://developers.cloudflare.com/r2/api/workers/workers-api-usage/
# [[r2_buckets]]
# binding = "MY_BUCKET"
# bucket_name = "my-bucket"

# Bind a Queue producer. Use this binding to schedule an arbitrary task that may be processed later by a Queue consumer.
# Docs: https://developers.cloudflare.com/queues/get-started
# [[queues.producers]]
# binding = "MY_QUEUE"
# queue = "my-queue"

# Bind a Queue consumer. Queue Consumers can retrieve tasks scheduled by Producers to act on them.
# Docs: https://developers.cloudflare.com/queues/get-started
# [[queues.consumers]]
# queue = "my-queue"

# Bind another Worker service. Use this binding to call another Worker without network overhead.
# Docs: https://developers.cloudflare.com/workers/platform/services
# [[services]]
# binding = "MY_SERVICE"
# service = "/api/*"

# Bind a Durable Object. Durable objects are a scale-to-zero compute primitive based on the actor model.
# Durable Objects can live for as long as needed. Use these when you need a long-running "server", such as in realtime apps.
# Docs: https://developers.cloudflare.com/workers/runtime-apis/durable-objects
# [[durable_objects.bindings]]
# name = "MY_DURABLE_OBJECT"
# class_name = "MyDurableObject"

# Durable Object migrations.
# Docs: https://developers.cloudflare.com/workers/learning/using-durable-objects#configure-durable-object-classes-with-migrations
# [[migrations]]
# tag = "v1"
# new_classes = ["MyDurableObject"]
